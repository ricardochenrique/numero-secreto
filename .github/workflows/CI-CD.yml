name: CI/CD_Pipeline

on:
  push:
    branches: [main, release, dev] # Branches que acionam o pipeline quando ocorre um push
  pull_request:
    branches: [main, release, dev] # Branches que acionam o pipeline quando ocorre um pull request

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          echo "Validating commit messages..."
          REGEX="^((Merge.*)|(Revert.*)|((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\(.*\))?!?: .*))"
          COMMIT_MSGS=$(git log --format=%B ${{ github.event.before }}..${{ github.event.after }})
          echo "$COMMIT_MSGS" | while read -r COMMIT_MSG; do
            if ! echo "$COMMIT_MSG" | grep -Eq "$REGEX"; then
              echo "Commit message does not follow the convention: $COMMIT_MSG"
              exit 1
            fi
          done

  build:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 14
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
      - run: npm ci
      - run: npm run lint

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16]
        test: [unit, integration]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run test:${{ matrix.test }}

    versions:
      if: github.ref == 'refs/heads/release' # Este trabalho é executado se a referência do GitHub for 'refs/heads/release'
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up shell script permissions
          run: chmod +x ./numero-secreto/generate_version.sh # Executa o comando para configurar as permissões do script shell
        - name: Generate version
          run: ./numero-secreto/generate_version.sh true # Executa o script para gerar a versão
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}